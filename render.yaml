services:
  - type: web
    name: vigilink-web
    runtime: python
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
    startCommand: gunicorn vigilink.wsgi:application
    autoDeploy: true
    envVars:
      - key: DJANGO_DEBUG
        value: "False"
      - key: SECRET_KEY
        generateValue: true
      # DB credentials come from the managed Postgres instance below
      - key: POSTGRES_DB
        fromDatabase:
          name: vigilink-db
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: vigilink-db
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: vigilink-db
          property: password
      - key: POSTGRES_HOST
        fromDatabase:
          name: vigilink-db
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: vigilink-db
          property: port
      - key: POSTGRES_CONN_MAX_AGE
        value: "60"
      # Optional: set these after first deploy (use your domain)
      # - key: ALLOWED_HOSTS
      #   value: "your-service.onrender.com,yourdomain.com"
      # - key: CSRF_TRUSTED_ORIGINS
      #   value: "https://your-service.onrender.com,https://yourdomain.com"
      # Email (optional for production emails)
      # - key: EMAIL_HOST_USER
      #   sync: false
      # - key: EMAIL_HOST_PASSWORD
      #   sync: false
      # Dropbox token(s) if used in production
      # - key: DROPBOX_ACCESS_TOKEN
      #   sync: false
    postdeploy: |
      python manage.py migrate
      python manage.py populate_locations
databases:
  - name: vigilink-db
    plan: free
